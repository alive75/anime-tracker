// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

// Defines the database connection for PostgreSQL.
datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            Int         @id @default(autoincrement())
    email         String      @unique
    password_hash String
    createdAt     DateTime    @default(now())
    updatedAt     DateTime    @updatedAt
    animeList     UserAnime[]
}

model Anime {
    id            Int         @id // Using the external API's ID (e.g., MyAnimeList ID)
    title         String
    synopsis      String
    totalEpisodes Int
    airingStatus  String
    coverImageUrl String
    releaseYear   Int
    genres        String[] // Using native array type for PostgreSQL
    users         UserAnime[]
    createdAt     DateTime    @default(now())
    updatedAt     DateTime    @updatedAt
}

model UserAnime {
    id              Int             @id @default(autoincrement())
    user            User            @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId          Int
    anime           Anime           @relation(fields: [animeId], references: [id], onDelete: Cascade)
    animeId         Int
    userStatus      UserAnimeStatus // Using native enum type for PostgreSQL
    watchedEpisodes Int
    createdAt       DateTime        @default(now())
    updatedAt       DateTime        @updatedAt

    @@unique([userId, animeId])
}

// Defines the possible statuses a user can assign to an anime.
// This is supported natively by PostgreSQL.
enum UserAnimeStatus {
    WATCHING
    COMPLETED
    PLANNED
    DROPPED
    PAUSED
}
