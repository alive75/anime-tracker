# docker-compose.yml
services:
  # API Service (NestJS)
  api:
    build:
      context: .
      dockerfile: packages/api/Dockerfile
    container_name: anime-tracker-api
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "3001:3001"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  # Web Service (React + Nginx)
  web:
    build:
      context: .
      dockerfile: packages/web/Dockerfile
      args:
        # Pass the API_KEY from the host .env file to the Docker build process
        API_KEY: ${API_KEY}
    container_name: anime-tracker-web
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - api
    networks:
      - app-network

  # Database Service (PostgreSQL)
  db:
    image: postgres:15
    container_name: anime-tracker-db
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
